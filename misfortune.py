# -*- coding: utf-8 -*-
from __future__ import annotations
from dataclasses import dataclass
from datetime import datetime, timedelta
from typing import Tuple, Dict, List
import os

# 10 –Ω–µ–±–µ—Å–Ω—ã—Ö —Å—Ç–≤–æ–ª–æ–≤ / 12 –∑–µ–º–Ω—ã—Ö –≤–µ—Ç–≤–µ–π
STEMS      = ["Áî≤","‰πô","‰∏ô","‰∏Å","Êàä","Â∑±","Â∫ö","Ëæõ","Â£¨","Áô∏"]
ELEMENTS   = ["–î–µ—Ä–µ–≤–æ","–û–≥–æ–Ω—å","–ó–µ–º–ª—è","–ú–µ—Ç–∞–ª–ª","–í–æ–¥–∞"]    # s//2
YIN_YANG   = ["—è–Ω","–∏–Ω—å"]                                  # s%2

BRANCHES = [
    ("Â≠ê","zi","—Ü–∑—ã"),("‰∏ë","chou","—á–æ—É"),("ÂØÖ","yin","–∏–Ω—å"),("ÂçØ","mao","–º–∞–æ"),
    ("Ëæ∞","chen","—á—ç–Ω—å"),("Â∑≥","si","—Å—ã"),("Âçà","wu","—É"),("Êú™","wei","–≤—ç–π"),
    ("Áî≥","shen","—à—ç–Ω—å"),("ÈÖâ","you","—é"),("Êàå","xu","—Å—é"),("‰∫•","hai","—Ö–∞–π"),
]
ANIMALS = {
    "zi":"üêÄ","chou":"üêÇ","yin":"üêÖ","mao":"üêá","chen":"üêâ","si":"üêç",
    "wu":"üêé","wei":"üêê","shen":"üêí","you":"üêì","xu":"üêï","hai":"üêñ"
}

# ‚Äî‚Äî‚Äî –¢–∞–±—É –µ–¥—ã (–º–Ω–æ–≥–æ –≤–∞—Ä–∏–∞–Ω—Ç–æ–≤, –≤—ã–±–∏—Ä–∞–µ–º –¥–µ—Ç–µ—Ä–º–∏–Ω–∏—Ä–æ–≤–∞–Ω–Ω–æ –ø–æ –¥–∞—Ç–µ/—á–∞—Å—É/—á–∞—Ç—É)
TABOOS: List[str] = [
    "–º—ë–¥ + –∑–µ–ª—ë–Ω—ã–π –ª—É–∫",
    "–∏–≥—É–∞–Ω–∞ + —Å–º–µ—Ç–∞–Ω–∞",
    "–∫—Ä–∞–± + –æ–≤—Å—è–Ω–∫–∞ –±—ã—Å—Ç—Ä–æ–≥–æ –ø—Ä–∏–≥–æ—Ç–æ–≤–ª–µ–Ω–∏—è",
    "–≥–æ–≤—è–∂–∏–π —Ö–æ–ª–æ–¥–µ—Ü + –±–∞–Ω–∞–Ω—ã",
    "—á–∏–ø—Å—ã ¬´–õ–µ–π—Å¬ª + —à–∞–º–ø–∞–Ω—Å–∫–æ–µ",
    "–∫–∞–∫—Ç—É—Å + —à–æ–∫–æ–ª–∞–¥–Ω—ã–µ –±–∞—Ç–æ–Ω—á–∏–∫–∏",
    "–º–∏–¥–∏–∏ + –∂–µ–≤–∞—Ç–µ–ª—å–Ω–∞—è —Ä–µ–∑–∏–Ω–∫–∞",
    "—Å–µ–ª—ë–¥–∫–∞ + –≤–∞–Ω–∏–ª—å–Ω–æ–µ –º–æ—Ä–æ–∂–µ–Ω–æ–µ",
    "—ç–Ω–µ—Ä–≥–µ—Ç–∏–∫ + —Å—É–ø –∏–∑ –ø–µ—Ç—Ä—É—à–∫–∏",
    "—Ñ–∞–ª–∞—Ñ–µ–ª—å + –∫–ª—é–∫–≤–µ–Ω–Ω—ã–π –º–æ—Ä—Å",
    "–ª—è–≥—É—à–∞—á—å–∏ –ª–∞–ø–∫–∏ + –±–æ—Ä—â",
    "–¥—É—Ä–∏–∞–Ω + –ø–µ–ª—å–º–µ–Ω–∏",
    "–∫—Ä–µ–≤–µ—Ç–∫–∏ + –∞–ø–µ–ª—å—Å–∏–Ω–æ–≤—ã–π —Å–æ–∫",
    "—Ç—É–Ω–µ—Ü + –ª–∞—Ç—Ç–µ",
    "—à–ø—Ä–æ—Ç—ã + –∫–∞–ø—É—á–∏–Ω–æ",
    "—Ä–æ–ª—Ç–æ–Ω + –∫–æ–∫–æ—Å–æ–≤–æ–µ –º–æ–ª–æ–∫–æ",
    "—Ö–∏–Ω–∫–∞–ª–∏ + –º–∞–ª–∏–Ω–æ–≤—ã–π —Å–∏—Ä–æ–ø",
    "—Å—É—à–∏ + –≤–∞—Ä–µ–Ω—å–µ –∏–∑ —à–∏—à–µ–∫",
    "–∫–æ–ª–±–∞—Å–∞ ¬´–¥–æ–∫—Ç–æ—Ä—Å–∫–∞—è¬ª + –∞–π—Ä–∞–Ω",
    "—Å—Ç–µ–π–∫ —Ç–∞—Ä—Ç–∞—Ä + –∫–æ–º–ø–æ—Ç –∏–∑ —Å—É—Ö–æ—Ñ—Ä—É–∫—Ç–æ–≤",
    "—Å—ã—Ä —Ç–æ—Ñ—É + ¬´–ë—É—Ä–∞—Ç–∏–Ω–æ¬ª",
    "–≤—è–ª–µ–Ω–∞—è –∫–µ—Ç–∞ + –∫–∞–∫–∞–æ",
    "–±—É–∂–µ–Ω–∏–Ω–∞ + ¬´–¢–∞—Ä—Ö—É–Ω¬ª",
    "—è–π—Ü–æ –ø–∞—à–æ—Ç + –∫–µ—Ñ–∏—Ä –∫–æ–º–Ω–∞—Ç–Ω–æ–π —Ç–µ–º–ø–µ—Ä–∞—Ç—É—Ä—ã",
    "—Ä—É–∫–∫–æ–ª–∞ + —Å–≥—É—â—ë–Ω–∫–∞",
    "–º–∞–Ω–≥–æ + —Å–µ–ª—ë–¥–∫–∞ –ø–æ–¥ —à—É–±–æ–π",
    "–∂–∞—Ä–µ–Ω—ã–µ –ø–µ–ª—å–º–µ–Ω–∏ + –∫–ª—É–±–Ω–∏—á–Ω—ã–π –π–æ–≥—É—Ä—Ç",
    "–ø–∞—Å—Ç–∞ –∫–∞—Ä–±–æ–Ω–∞—Ä–∞ + –∫–ª—é–∫–≤–µ–Ω–Ω–æ–µ –≤–∞—Ä–µ–Ω—å–µ",
    "–∫–∏–ª—å–∫–∞ –≤ —Ç–æ–º–∞—Ç–µ + –ª–∞—Ç—Ç–µ –±–µ–∑ –ø–µ–Ω–∫–∏",
]

# ‚Äî‚Äî‚Äî –ù–µ—Å—á–∞—Å—Ç—å—è (–∫–∞–∫ —Ç—ã –ø—Ä–∏—Å—ã–ª–∞–ª, –±–µ–∑ –ø—Ä–∞–≤–æ–∫)
MISFORTUNES: List[Dict[str, str]] = [
    {"emoji":"üî•","code":"fire","name":"–ú–∞–π –∞—Å—Å –∏–∑ –æ–Ω —Ñ–∞–µ—Ä","desc":"–í—Å–µ —Å–≥–æ—Ä–∏—Ç, –≤–∞–ª–∏ –Ω–∞ –¥–∞—á—É, —Ç–∞–º –ø–æ –∫—Ä–∞–π–Ω–µ–π –º–µ—Ä–µ –≤–æ–∑–¥—É—Ö —á–∏—â–µ"},
    {"emoji":"üåä","code":"flood","name":"–ù–æ–π –≥–æ—É–∑ —Ö–∞—Ä–¥","desc":"–°–µ–≥–æ–¥–Ω—è —Ç–≤–æ–µ–≥–æ —Å–æ—Å–µ–¥–∞ —Å–Ω–∏–∑—É –ø–æ—Å—Ç–∏–≥–Ω–µ—Ç –Ω–µ–±–µ—Å–Ω–∞—è –∫–∞—Ä–∞, —Å–¥–µ–ª–∞–π –≤–∏–¥ —á—Ç–æ —Ç—ã –¥–∞–≤–Ω–æ –≤ –æ—Ç—å–µ–∑–¥–µ"},
    {"emoji":"üï≥Ô∏è","code":"hole","name":"–ß–µ—Ä–Ω–∞—è –¥—ã—Ä–∞","desc":"–≠–∫–∑–∏—Å—Ç–µ–Ω—Ü–∏–∞–ª—å–Ω—ã–π –∫—Ä–∏–∑–∏—Å, —á–µ—Ä–Ω–∞—è –±–µ–∑–¥–Ω–∞ –±–µ–∑—É–º–∏—è, —Ç–ª–µ–Ω –∏ –±–µ–∑—ã—Å—Ö–æ–¥–Ω–æ—Å—Ç—å - –æ–±—ã—á–Ω—ã–π –¥–µ–Ω—å, –Ω–∏—á–µ–≥–æ –Ω–æ–≤–æ–≥–æ"},
    {"emoji":"üß≤","code":"theft","name":"–õ–∏–ø–∫–∏–µ —Ä—É–∫–∏","desc":"–¢–µ–±—è –æ–±–ª–∞–ø–∞–µ—Ç –ø–µ–Ω—Å–∏–æ–Ω–µ—Ä–∫–∞"},
    {"emoji":"üíª","code":"tech_fail","name":"–°–∏–Ω–∏–π —ç–∫—Ä–∞–Ω —Å—É–¥—å–±—ã","desc":"–¢–µ—Ö–Ω–∏–∫–∞ –≤—ã–∫–∏–Ω–µ—Ç —Ñ–æ–∫—É—Å; VPN –ø–µ—Ä–µ—Å—Ç–∞–Ω–µ—Ç –∑–∞–ø—É—Å–∫–∞—Ç—å—Å—è, —Ç—ã –Ω–µ —Å–º–æ–∂–µ—à—å –ª–∏—Å—Ç–∞—Ç—å —Ä–∏–ª–∑—ã –≤ –∏–Ω—Å—Ç–∞–≥—Ä–∞–º "},
    {"emoji":"üß≥","code":"lost","name":"–ü–æ—Ç–µ—Ä—è—à–∫–∞","desc":"–†–∏—Å–∫ –ø–æ—Ç–µ—Ä—è—Ç—å –∫–ª—é—á–∏/–¥–æ–∫—É–º–µ–Ω—Ç—ã/–¥–µ–Ω—å–≥–∏/—Å–æ–≤–µ—Å—Ç—å. —Ç–µ—Ä—è–π –ø–æ—Å–ª–µ–¥–Ω–µ–µ, —Ç–∞–º –≤—Å–µ —Ä–∞–≤–Ω–æ –Ω–∏—á–µ–≥–æ –Ω–µ –æ—Å—Ç–∞–ª–æ—Å—å"},
    {"emoji":"ü§í","code":"illness","name":"–í–Ω–µ–∑–∞–ø–Ω–∞—è —Ö–≤–æ—Ä—å","desc":"–¢–µ–±—è –ø–æ—Ä–∞–∑—è—Ç —Å–ø–æ—Ä—ã –∫–æ—Ä–¥–∏—Ü–µ–ø—Å–∞, —Ç—ã —Å—Ç–∞–Ω–µ—à—å –≥—Ä–∏–±–æ–º "},
    {"emoji":"üßø","code":"curse","name":"–í –∏–Ω—Ç–µ—Ä–Ω–µ—Ç–∞—Ö –∫—Ç–æ-—Ç–æ –Ω–µ–ø—Ä–∞–≤","desc":"–°–≥–ª–∞–∑ –∏ —Ö–µ–π—Ç; —Ç—ã –±—É–¥–µ—à—å –≤–≤—è–∑—ã–≤–∞—Ç—å—Å—è –≤ –ª—é–±–æ–π —Å–ø–æ—Ä –≤ –∏–Ω—Ç–µ—Ä–Ω–µ—Ç–µ –∏ –≤–µ–∑–¥–µ –ø—Ä–æ–∏–≥—Ä–∞–µ—à—å"},
    {"emoji":"‚è∞","code":"deadline","name":"–î–µ–¥–ª–∞–π–Ω—ã –≥–æ—Ä—è—Ç","desc":"—Ç–≤–æ—è –ø—å—è–Ω–∞—è –±—ã–≤—à–∞—è/–±—ã–≤—à–∏–π –ø–æ–∑–≤–æ–Ω–∏—Ç —Ç–µ–±–µ —á–µ—Ä–µ–∑ –ø–∞—Ä—É –º–∏–Ω—É—Ç –∏ —Ä–∞—Å—Å–∫–∞–∂–µ—Ç –ø—Ä–æ —Å–≤–æ–∏ –±–µ–¥—ã"},
    {"emoji":"üóØÔ∏è","code":"arguments","name":"–°–∫–∞–Ω–¥–∞–ª –Ω–∞ –ø—É—Å—Ç–æ–º –º–µ—Å—Ç–µ","desc":"–¢—ã –ø–æ—Å—Å–æ—Ä–∏—à—å—Å—è —Å –ª—é–±–∏–º—ã–º–∏ —Å–µ–∫—Ç–∞–Ω—Ç–∞–º–∏ –∏–∑-–∑–∏ –Ω—é–∞–Ω—Å–æ–≤ –∂–µ—Ä—Ç–≤–æ–ø—Ä–∏–Ω–æ—à–µ–Ω–∏—è, –æ–Ω–∏ –ø–µ—Ä–µ—Å—Ç–∞–Ω—É—Ç —Å —Ç–æ–±–æ–π –æ–±—â–∞—Ç—å—Å—è"},
    {"emoji":"üôà","code":"embarr","name":"–ü—É–±–ª–∏—á–Ω—ã–π –∫–æ–Ω—Ñ—É–∑","desc":"–¢–µ–±—è –ø—Ä–∏–≥–ª–∞—Å—è—Ç –ø—Ä–æ–≤–µ—Å—Ç–∏ –º–∞—Å—Ç–µ—Ä –∫–ª–∞—Å—Å –¥–ª—è –ø–µ–Ω—Å–∏–æ–Ω–µ—Ä–æ–≤, —Ç—ã –µ–≥–æ —Å–æ–ª—å–µ—à—å –∏ –±—É–¥–µ—à—å –æ—Å–≤–∏—Å—Ç–∞–Ω"},
    {"emoji":"üóÉÔ∏è","code":"bureau","name":"–ë—é—Ä–æ–∫—Ä–∞—Ç–∏—á–µ—Å–∫–∏–π –∫–≤–µ—Å—Ç","desc":"–°–æ–±–∏—Ä–∞–π –≤–µ—â–∏, —Ç—ã —É–µ–∑–∂–∞–µ—à—å –≤ –ì–µ—Ä–º–∞–Ω–∏—é"},
    {"emoji":"üöß","code":"transport","name":"–î–æ—Ä–æ–≥–∏ –≥–Ω–µ–≤–∞","desc":"–¢—ã –æ—Ç–ø—Ä–∞–≤–ª—è–µ—à—å—Å—è –≤ –ø—É—Ç–µ—à–µ—Å—Ç–≤–∏–µ —á–µ—Ä–µ–∑ –≤—Å—é –†–æ—Å—Å–∏—é –Ω–∞ –õ–∞–¥–µ –ö–∞–ª–∏–Ω–∞"},
    {"emoji":"ü©π","code":"bruise","name":"–õ—ë–≥–∫–∏–µ —Ç—Ä–∞–≤–º—ã","desc":"–¢—ã –æ—Å–æ–∑–Ω–∞–µ—à—å, —á—Ç–æ –Ω–∏—á–µ–≥–æ –Ω–µ –¥–æ–±–∏–ª—Å—è –≤ —ç—Ç–æ–π –∂–∏–∑–Ω–∏ –∏ –ø—Ä–æ–¥–æ–ª–∂–∏—à—å –ª–∏—Å—Ç–∞—Ç—å –º–µ–º–∞—Å—ã"},
    {"emoji":"üßØ","code":"appliance","name":"–ë—ã—Ç–æ–≤–æ–π –±—É–Ω—Ç","desc":"–¢–∞—Ä–∞–∫–∞–Ω—ã –æ—Ä–≥–∞–Ω–∏–∑—É—é—Ç –ø—Ä–æ—Ñ—Å–æ—é–∑, –∑–∞—Ö–≤–∞—Ç—è—Ç —Ö–æ–ª–æ–¥–∏–ª—å–Ω–∏–∫ –∏ —Å—Ç–∞–Ω—É—Ç —Ç—Ä–µ–±–æ–≤–∞—Ç—å –∫–æ–º–º—É–Ω–∏—Å—Ç–∏—á–µ—Å–∫–æ–π —É—Ç–æ–ø–∏–∏ "},
    {"emoji":"üßíüê∂","code":"kids_pets","name":"–î–æ–º–∞—à–Ω–∏–µ –ø—Ä–æ–¥–µ–ª–∫–∏","desc":"–í—Å–µ —Å—Ç–µ–Ω—ã –≤ —Ç–≤–æ–µ–º –¥–æ–º–µ –±—É–¥—É—Ç –∏—Å–ø–∏—Å–∞–Ω—ã, –∏–Ω–æ–≥–¥–∞ –¥–∞–∂–µ —Ä–µ–±–µ–Ω–∫–æ–º"},
    {"emoji":"üëª","code":"ghost","name":"–ù–æ—á–Ω—ã–µ –≥–æ—Å—Ç–∏","desc":"–¢–≤–æ–π –ø–æ–∫–æ–π–Ω—ã–π –ø—Ä–∞–¥–µ–¥ –≤—Å—é –Ω–æ—á—å –±—É–¥–µ—Ç –ø–æ–Ω–æ—Å–∏—Ç—å —Ç–µ–±—è –∑–∞ –Ω–µ–¥–æ—Å—Ç–∞–æ—á–Ω—É—é —Å—ã–Ω–æ–≤—å—é –ø–æ—á—Ç–∏—Ç–µ–ª—å–Ω–æ—Å—Ç—å"},
    {"emoji":"ü™¶","code":"grim","name":"–ú—Ä–∞—á–Ω—ã–π –∑–Ω–∞–∫","desc":"–î–æ–ª–ª–∞—Ä –ø–æ —Å–æ—Ç–∫–µ"},
]

# ‚Äî‚Äî‚Äî –ê–ª–≥–æ—Ä–∏—Ç–º —Ü–∏–∫–ª–æ–≤
EPOCH = datetime(1970,1,1,0,0,0)
def _idx60(dt: datetime) -> int:      return ((dt - EPOCH).days) % 60
def _stem(dt: datetime) -> int:        return _idx60(dt) % 10
def _branch(dt: datetime) -> int:      return _idx60(dt) % 12
def _hour_branch(dt: datetime) -> int: return ((dt.hour + 1) // 2) % 12  # –¥–≤—É—Ö—á–∞—Å–æ–≤—ã–µ –≤–µ—Ç–≤–∏

# ‚Äî‚Äî‚Äî –ü–∏–∫—Ç–æ–≥—Ä–∞–º–º—ã –≤–µ—Ç–≤–µ–π (ASCII, —á—Ç–æ–±—ã –Ω–µ –±—ã–ª–æ ¬´–∫–≤–∞–¥—Ä–∞—Ç–æ–≤¬ª)
ICON_DIR = "icons"
def icon_filename(py: str) -> str: return os.path.join(ICON_DIR, f"{py}.png")

def ensure_icons():
    try:
        from PIL import Image, ImageDraw, ImageFont
    except Exception:
        return
    os.makedirs(ICON_DIR, exist_ok=True)
    def load_font(size):
        for path in [
            "arial.ttf",
            "/usr/share/fonts/truetype/dejavu/DejaVuSans.ttf",
            "/usr/share/fonts/truetype/liberation/LiberationSans-Regular.ttf",
        ]:
            try: return ImageFont.truetype(path, size)
            except Exception: pass
        return ImageFont.load_default()
    font_code = load_font(140); font_ru = load_font(40)
    for han, py, ru in BRANCHES:
        p = icon_filename(py)
        if os.path.exists(p): continue
        img = Image.new("RGB", (512, 512), (20, 20, 24))
        d = ImageDraw.Draw(img)
        d.rounded_rectangle((40, 40, 472, 472), radius=48, fill=(48, 48, 56))
        d.text((256, 230), py.upper(), anchor="mm", font=font_code, fill=(240, 240, 240))
        d.text((256, 360), ru, anchor="mm", font=font_ru, fill=(200, 200, 200))
        img.save(p, "PNG")

@dataclass
class HowlReading:
    dt: datetime
    stem: int
    branch: int
    hour_branch: int
    element: str
    yin_yang: str
    branch_tuple: Tuple[str,str,str]
    hour_branch_tuple: Tuple[str,str,str]
    doom_index: int
    doom_level: int
    doom: Dict[str,str]
    taboo: str

def read_howl(dt: datetime, salt: int = 0) -> HowlReading:
    s  = _stem(dt)
    b  = _branch(dt)
    hb = _hour_branch(dt)
    element = ELEMENTS[s // 2]
    yin_yang = YIN_YANG[s % 2]
    branch_tuple      = BRANCHES[b]
    hour_branch_tuple = BRANCHES[hb]

    # –Ω–µ—Å—á–∞—Å—Ç—å–µ –∏ —Å—Ç–µ–ø–µ–Ω—å
    doom_index = (s*12 + b*3 + hb + salt) % len(MISFORTUNES)
    doom_level = ((s + hb + b) % 5) + 1  # 1..5

    # –í–ê–ñ–ù–û: —Ç–∞–±—É –µ–¥—ã ‚Äî –¥–µ—Ç–µ—Ä–º–∏–Ω–∏—Ä–æ–≤–∞–Ω–Ω–æ –ø–æ –¥–∞—Ç–µ/—á–∞—Å—É/—á–∞—Ç—É (–Ω–µ –∑–∞—Å—Ç—Ä—è–Ω–µ—Ç –Ω–∞ ¬´–º—ë–¥+–ª—É–∫¬ª)
    taboo_idx = (s*13 + b*7 + hb*3 + salt) % len(TABOOS)
    taboo = TABOOS[taboo_idx]

    doom = MISFORTUNES[doom_index]
    return HowlReading(dt, s, b, hb, element, yin_yang, branch_tuple, hour_branch_tuple,
                       doom_index, doom_level, doom, taboo)

def render_reading(r: HowlReading) -> str:
    import html as _html
    han, py, ru    = r.branch_tuple
    hhan, hpy, hru = r.hour_branch_tuple
    stars = "‚ò†Ô∏è" * r.doom_level

    # –º—è–≥–∫–∏–µ, –Ω–æ—Ä–º —Å–æ–≤–µ—Ç—ã (–∫–∏—Ç–∞–π—Å–∫–∞—è –º–µ–¥–∏—Ü–∏–Ω–∞/–¥–∞–æ-–ø—Ä–∞–∫—Ç–∏–∫–∏) ‚Äî –º–æ–∂–Ω–æ –ø—Ä–∞–≤–∏—Ç—å –ø–æ–¥ —Å–µ–±—è
    tips = [
        "–î—ã—Ö–∞–Ω–∏–µ –∂–∏–≤–æ—Ç–æ–º 5 –º–∏–Ω—É—Ç: –≤—ã–¥–æ—Ö –¥–ª–∏–Ω–Ω–µ–µ –≤–¥–æ—Ö–∞.",
        "–®–µ—Å—Ç—å –∑–≤—É–∫–æ–≤: xu/–ø–µ—á–µ–Ω—å, he/—Å–µ—Ä–¥—Ü–µ, hu/—Å–µ–ª–µ–∑—ë–Ω–∫–∞, si/–ª—ë–≥–∫–∏–µ, chui/–ø–æ—á–∫–∏, xi/—Ç—Ä–æ–π–Ω–æ–π –æ–±–æ–≥—Ä–µ–≤–∞—Ç–µ–ª—å.",
        "–†–∞—Å—Ç–∏—Ä–∞–Ω–∏–µ –ª–∞–¥–æ–Ω–µ–π –¥–æ —Ç–µ–ø–ª–∞ –∏ –ø—Ä–∏–∫–ª–∞–¥—ã–≤–∞–Ω–∏–µ –∫ –≥–ª–∞–∑–∞–º 30‚Äì60 —Å–µ–∫.",
        "–ü–æ—Å—Ç—É–∫–∏–≤–∞–Ω–∏–µ –≥—Ä—É–¥–Ω–æ–π –∫–ª–µ—Ç–∫–∏ 36 —Ä–∞–∑ –ª–∞–¥–æ–Ω—è–º–∏.",
        "–ü—Ä–æ–∫–∞—Ç–∫–∞ —Å—Ç–æ–ø—ã –º—è—á–æ–º 1‚Äì2 –º–∏–Ω—É—Ç—ã.",
        "–°–æ–≥—Ä–µ—Ç—å –Ω–∏–∂–Ω–∏–π –¥–∞–Ω—å—Ç—è–Ω—å —Ç—ë–ø–ª–æ–π –≥—Ä–µ–ª–∫–æ–π 10 –º–∏–Ω—É—Ç.",
        "–ò–º–±–∏—Ä–Ω—ã–π —á–∞–π —Å –∫—Ä–∞—Å–Ω—ã–º —Ñ–∏–Ω–∏–∫–æ–º –∏ —è–≥–æ–¥–∞–º–∏ –≥–æ–¥–∂–∏.",
        "–¢—ë–ø–ª–∞—è –Ω–æ–∂–Ω–∞—è –≤–∞–Ω–Ω–∞ 10‚Äì15 –º–∏–Ω—É—Ç –ø–µ—Ä–µ–¥ —Å–Ω–æ–º.",
        "HeGu (LI4) –∏ ZuSanLi (ST36) ‚Äî —Å–∞–º–æ–º–∞—Å—Å–∞–∂ –ø–æ 1‚Äì2 –º–∏–Ω.",
        "NeiGuan (PC6) 1‚Äì2 –º–∏–Ω; –º—è–≥–∫–∏–µ –∫—Ä—É–≥–∏.",
        "FengChi (GB20) —É –æ—Å–Ω–æ–≤–∞–Ω–∏—è —á–µ—Ä–µ–ø–∞ ‚Äî –º—è–≥–∫–∏–µ –∫—Ä—É–≥–∏.",
        "–ö—Ä—É–≥–∏ –ø–ª–µ—á–∞–º–∏ –∏ —à–µ–∏ –ø–æ 6 —Ä–∞–∑ –≤ –∫–∞–∂–¥—É—é —Å—Ç–æ—Ä–æ–Ω—É.",
        "–õ—ë–≥–∫–∞—è –≤—Å—Ç—Ä—è—Å–∫–∞ —Ç–µ–ª–∞ 1‚Äì2 –º–∏–Ω—É—Ç—ã.",
        "5‚Äì10 –º–∏–Ω—É—Ç —Ä–∞—Å—Ç—è–∂–∫–∏/–±–∞–¥—É–∞–Ω—å—Ü–∑–∏–Ω ‚Äî –≤—ã–±–µ—Ä–∏ 3‚Äì4 –¥–≤–∏–∂–µ–Ω–∏—è.",
        "–ü—Ä–æ–≤–µ—Ç—Ä–∏–≤–∞–Ω–∏–µ 3 –º–∏–Ω—É—Ç—ã; –ø–æ –∂–µ–ª–∞–Ω–∏—é –ª—ë–≥–∫–æ–µ –±–ª–∞–≥–æ–≤–æ–Ω–∏–µ.",
        "–ú–µ–Ω—å—à–µ —Ö–æ–ª–æ–¥–Ω–æ–≥–æ –≤ —Ö–æ–ª–æ–¥–Ω—ã–π –¥–µ–Ω—å; –≤—ã–±–∏—Ä–∞–π —Ç—ë–ø–ª—É—é –ø–∏—â—É.",
        "–¢—ë–ø–ª–∞—è –≤–æ–¥–∞ –º–∞–ª–µ–Ω—å–∫–∏–º–∏ –≥–ª–æ—Ç–∫–∞–º–∏ –≤ —Ç–µ—á–µ–Ω–∏–µ –¥–Ω—è.",
        "–†–∞—Å—Ç–∏—Ä–∞–Ω–∏–µ –ø–æ—è—Å–Ω–∏—Ü—ã (–ø–æ—á–∫–∏) 1‚Äì2 –º–∏–Ω—É—Ç—ã –¥–æ —Ç–µ–ø–ª–∞.",
        "–ü–∞—É–∑–∞ –±–µ–∑ —ç–∫—Ä–∞–Ω–∞ 5 –º–∏–Ω—É—Ç: –≤–∑–≥–ª—è–¥ –≤–¥–∞–ª—å, –ø–ª–µ—á–∏ –≤–Ω–∏–∑.",
        "–ú–∞—Å—Å–∞–∂ –∂–∏–≤–æ—Ç–∞ –ø–æ —á–∞—Å–æ–≤–æ–π 1‚Äì2 –º–∏–Ω—É—Ç—ã.",
    ]
    tip = tips[(r.stem + r.branch + r.hour_branch) % len(tips)]

    name = _html.escape(r.doom["name"]); desc = _html.escape(r.doom["desc"])
    tip = _html.escape(tip); taboo = _html.escape(r.taboo)

    lines = [
        f"{r.doom['emoji']} {stars}  <b>{name}</b>",
        f"üïí <b>–í—Ä–µ–º—è:</b> {r.dt.isoformat(sep=' ', timespec='minutes')}",
        f"üêâ <b>–ó–Ω–∞–∫:</b> {ANIMALS.get(py,'?')} {han} {py} / {ru}; <i>—á–∞—Å</i> {ANIMALS.get(hpy,'?')} {hhan} {hpy}",
        f"üìú <b>–û–ø–∏—Å–∞–Ω–∏–µ:</b> {desc}",
        f"‚öñÔ∏è <b>–≠–ª–µ–º–µ–Ω—Ç –¥–Ω—è:</b> {ELEMENTS[r.stem // 2]} ({YIN_YANG[r.stem % 2]})",
        f"üö´ <b>–¢–∞–±—É –µ–¥—ã:</b> {taboo}",
        f"üëª <b>–°–æ–≤–µ—Ç –¥—É—Ö–æ–≤:</b> {tip}",
    ]
    return "\n".join(lines)

# ‚Äî‚Äî‚Äî (–æ–ø—Ü–∏–æ–Ω–∞–ª—å–Ω–æ) iCalendar –Ω–∞ –≥–æ–¥
def ics_for_year(year: int) -> str:
    lines = ["BEGIN:VCALENDAR","VERSION:2.0","PRODID:-//HOWL//ru"]
    cur = datetime(year, 1, 1)
    while cur.year == year:
        r = read_howl(cur)
        uid  = f"{cur.strftime('%Y%m%d')}-{r.doom['code']}@howl"
        title = r.doom["name"]
        desc  = f"{r.doom['emoji']} {r.doom['name']} ‚Äî {r.doom['desc']} / –¢–∞–±—É: {r.taboo}"
        desc  = desc.replace(",", r"\,").replace(";", r"\;").replace("\n", r"\n")
        lines += [
            "BEGIN:VEVENT",
            f"UID:{uid}",
            f"DTSTAMP:{cur.strftime('%Y%m%d')}T000000Z",
            f"DTSTART;VALUE=DATE:{cur.strftime('%Y%m%d')}",
            f"SUMMARY:{title}",
            f"DESCRIPTION:{desc}",
            "END:VEVENT",
        ]
        cur += timedelta(days=1)
    lines.append("END:VCALENDAR")
    return "\n".join(lines)
