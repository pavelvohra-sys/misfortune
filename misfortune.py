# -*- coding: utf-8 -*-
"""
misfortune.py ‚Äî –¥–≤–∏–≥–∞—Ç–µ–ª—å HOWL:
- –ø—Å–µ–≤–¥–æ-¬´–±–∞—Ü–∑—ã¬ª (—Å—Ç–≤–æ–ª/–≤–µ—Ç–≤—å/—á–∞—Å) –æ—Ç –≤—Ä–µ–º–µ–Ω–∏ ¬´–≤–æ—è¬ª
- –∫–∞—Ç–µ–≥–æ—Ä–∏–∏ –Ω–µ—Å—á–∞—Å—Ç–∏–π (—Ä–µ–¥–∞–∫—Ç–∏—Ä—É–π –ø–æ–¥ —Å–µ–±—è)
- –ø–∏–∫—Ç–æ–≥—Ä–∞–º–º—ã 12 –≤–µ—Ç–≤–µ–π (—ç–º–æ–¥–∑–∏-–∂–∏–≤–æ—Ç–Ω—ã–µ)
- 12 ¬´—Ç–∞–±—É –Ω–∞ –µ–¥—É¬ª –≤–º–µ—Å—Ç–æ –Ω–∞–ø—Ä–∞–≤–ª–µ–Ω–∏–π
- —Å–æ–≤–µ—Ç—ã (TCM/–¥–∞–æ—Å—Å–∫–∏–µ –ø—Ä–∞–∫—Ç–∏–∫–∏, –±–µ–∑ –∞–±—Å—É—Ä–¥–∞)
"""
from __future__ import annotations
from dataclasses import dataclass
from datetime import datetime, timedelta
from typing import Tuple, Dict, List
import os

# 10 –Ω–µ–±–µ—Å–Ω—ã—Ö —Å—Ç–≤–æ–ª–æ–≤
STEMS      = ["Áî≤","‰πô","‰∏ô","‰∏Å","Êàä","Â∑±","Â∫ö","Ëæõ","Â£¨","Áô∏"]
ELEMENTS   = ["–î–µ—Ä–µ–≤–æ","–û–≥–æ–Ω—å","–ó–µ–º–ª—è","–ú–µ—Ç–∞–ª–ª","–í–æ–¥–∞"]  # s//2
YIN_YANG   = ["—è–Ω","–∏–Ω—å"]                                # s%2

# 12 –∑–µ–º–Ω—ã—Ö –≤–µ—Ç–≤–µ–π (Êº¢Â≠ó, pinyin, —Ä—É—Å. –ø–µ—Ä–µ–¥–∞—á–∞)
BRANCHES = [
    ("Â≠ê","zi","—Ü–∑—ã"),("‰∏ë","chou","—á–æ—É"),("ÂØÖ","yin","–∏–Ω—å"),("ÂçØ","mao","–º–∞–æ"),
    ("Ëæ∞","chen","—á—ç–Ω—å"),("Â∑≥","si","—Å—ã"),("Âçà","wu","—É"),("Êú™","wei","–≤—ç–π"),
    ("Áî≥","shen","—à—ç–Ω—å"),("ÈÖâ","you","—é"),("Êàå","xu","—Å—é"),("‰∫•","hai","—Ö–∞–π"),
]

# –ñ–∏–≤–æ—Ç–Ω—ã–µ-—ç–º–æ–¥–∑–∏ –¥–ª—è –≤–µ—Ç–≤–µ–π
ANIMALS = {
    "zi":"üêÄ","chou":"üêÇ","yin":"üêÖ","mao":"üêá","chen":"üêâ","si":"üêç",
    "wu":"üêé","wei":"üêê","shen":"üêí","you":"üêì","xu":"üêï","hai":"üêñ"
}

# 12 ¬´—Ç–∞–±—É –Ω–∞ –µ–¥—É¬ª (È£üÁâ©Áõ∏ÂÖã, —Ñ–æ–ª—å–∫–ª–æ—Ä) ‚Äî –ø–æ –ø–æ—Ä—è–¥–∫—É –≤–µ—Ç–≤–µ–π Â≠ê‚Ä¶‰∫•
BRANCH_TABOOS = [
    "–∫—Ä–∞–± + —Ö—É—Ä–º–∞ (ËûÉËüπ+ÊüøÂ≠ê)",                 # Â≠ê
    "–º–æ–ª–æ–∫–æ + –∞–ø–µ–ª—å—Å–∏–Ω (ÁâõÂ•∂+Ê©ô/Ê©ò)",            # ‰∏ë
    "–∫—Ä–µ–≤–µ—Ç–∫–∏/–∫—Ä–∞–± + –±–æ–ª—å—à–∏–µ –¥–æ–∑—ã –≤–∏—Ç–∞–º–∏–Ω–∞ C",   # ÂØÖ
    "—Ç–æ—Ñ—É + —à–ø–∏–Ω–∞—Ç (Ë±ÜËÖê+Ëè†Ëèú)",                 # ÂçØ
    "–∫—Ä–µ–ø–∫–∏–π —á–∞–π –ø–æ—Å–ª–µ –∫—Ä–∞–±–∞ (ÊµìËå∂+Ëüπ)",          # Ëæ∞
    "–ª–∏—á–∏ + –∞–ª–∫–æ–≥–æ–ª—å (ËçîÊûù+ÈÖí)",                 # Â∑≥
    "–∞—Ä–±—É–∑ + –±–∞—Ä–∞–Ω–∏–Ω–∞ (Ë•øÁìú+ÁæäËÇâ)",              # Âçà
    "–º—ë–¥ + –∑–µ–ª—ë–Ω—ã–π –ª—É–∫ (ËúÇËúú+Ëë±)",               # Êú™
    "–ø–æ–ª–µ–≤—ã–µ —É–ª–∏—Ç–∫–∏ + –∫—É–∫—É—Ä—É–∑–∞ (Áî∞Ëû∫+ÁéâÁ±≥)",     # Áî≥
    "—è–π—Ü–æ + —Å–æ–µ–≤–æ–µ –º–æ–ª–æ–∫–æ (È∏°Ëõã+Ë±ÜÊµÜ)",          # ÈÖâ
    "–∫—Ä–∞—Å–Ω—ã–π —Ñ–∏–Ω–∏–∫ + –æ–≥—É—Ä–µ—Ü (Á∫¢Êû£+ÈªÑÁìú)",        # Êàå
    "–∫—Ä–µ–≤–µ—Ç–∫–∏ + —Ç—ã–∫–≤–∞ (Ëôæ+ÂçóÁìú)",               # ‰∫•
]

# –ö–ê–¢–ï–ì–û–†–ò–ò –ù–ï–°–ß–ê–°–¢–ò–ô ‚Äî —Ä–µ–¥–∞–∫—Ç–∏—Ä—É–π –ø–æ–¥ —Å–µ–±—è (emoji/name/desc)
MISFORTUNES: List[Dict[str, str]] = [
  {"emoji":"üî•","code":"fire","name":"–ú–∞–π –∞—Å—Å –∏–∑ –æ–Ω —Ñ–∞–µ—Ä","desc":"–í—Å–µ —Å–≥–æ—Ä–∏—Ç, –≤–∞–ª–∏ –Ω–∞ –¥–∞—á—É, —Ç–∞–º –ø–æ –∫—Ä–∞–π–Ω–µ–π –º–µ—Ä–µ –≤–æ–∑–¥—É—Ö —á–∏—â–µ"},
    {"emoji":"üåä","code":"flood","name":"–ù–æ–π –≥–æ—É–∑ —Ö–∞—Ä–¥","desc":"–°–µ–≥–æ–¥–Ω—è —Ç–≤–æ–µ–≥–æ —Å–æ—Å–µ–¥–∞ —Å–Ω–∏–∑—É –ø–æ—Å—Ç–∏–≥–Ω–µ—Ç –Ω–µ–±–µ—Å–Ω–∞—è –∫–∞—Ä–∞, —Å–¥–µ–ª–∞–π –≤–∏–¥ —á—Ç–æ —Ç—ã –¥–∞–≤–Ω–æ –≤ –æ—Ç—å–µ–∑–¥–µ"},
    {"emoji":"üï≥Ô∏è","code":"hole","name":"–ß–µ—Ä–Ω–∞—è –¥—ã—Ä–∞","desc":"–≠–∫–∑–∏—Å—Ç–µ–Ω—Ü–∏–∞–ª—å–Ω—ã–π –∫—Ä–∏–∑–∏—Å, —á–µ—Ä–Ω–∞—è –±–µ–∑–¥–Ω–∞ –±–µ–∑—É–º–∏—è, —Ç–ª–µ–Ω –∏ –±–µ–∑—ã—Å—Ö–æ–¥–Ω–æ—Å—Ç—å - –æ–±—ã—á–Ω—ã–π –¥–µ–Ω—å, –Ω–∏—á–µ–≥–æ –Ω–æ–≤–æ–≥–æ"},
    {"emoji":"üß≤","code":"theft","name":"–õ–∏–ø–∫–∏–µ —Ä—É–∫–∏","desc":"–¢–µ–±—è –æ–±–ª–∞–ø–∞–µ—Ç –ø–µ–Ω—Å–∏–æ–Ω–µ—Ä–∫–∞"},
    {"emoji":"üíª","code":"tech_fail","name":"–°–∏–Ω–∏–π —ç–∫—Ä–∞–Ω —Å—É–¥—å–±—ã","desc":"–¢–µ—Ö–Ω–∏–∫–∞ –≤—ã–∫–∏–Ω–µ—Ç —Ñ–æ–∫—É—Å; VPN –ø–µ—Ä–µ—Å—Ç–∞–Ω–µ—Ç –∑–∞–ø—É—Å–∫–∞—Ç—å—Å—è, —Ç—ã –Ω–µ —Å–º–æ–∂–µ—à—å –ª–∏—Å—Ç–∞—Ç—å —Ä–∏–ª–∑—ã –≤ –∏–Ω—Å—Ç–∞–≥—Ä–∞–º "},
    {"emoji":"üß≥","code":"lost","name":"–ü–æ—Ç–µ—Ä—è—à–∫–∞","desc":"–†–∏—Å–∫ –ø–æ—Ç–µ—Ä—è—Ç—å –∫–ª—é—á–∏/–¥–æ–∫—É–º–µ–Ω—Ç—ã/–¥–µ–Ω—å–≥–∏/—Å–æ–≤–µ—Å—Ç—å. —Ç–µ—Ä—è–π –ø–æ—Å–ª–µ–¥–Ω–µ–µ, —Ç–∞–º –≤—Å–µ —Ä–∞–≤–Ω–æ –Ω–∏—á–µ–≥–æ –Ω–µ –æ—Å—Ç–∞–ª–æ—Å—å"},
    {"emoji":"ü§í","code":"illness","name":"–í–Ω–µ–∑–∞–ø–Ω–∞—è —Ö–≤–æ—Ä—å","desc":"–¢–µ–±—è –ø–æ—Ä–∞–∑—è—Ç —Å–ø–æ—Ä—ã –∫–æ—Ä–¥–∏—Ü–µ–ø—Å–∞, —Ç—ã —Å—Ç–∞–Ω–µ—à—å –≥—Ä–∏–±–æ–º "},
    {"emoji":"üßø","code":"curse","name":"–í –∏–Ω—Ç–µ—Ä–Ω–µ—Ç–∞—Ö –∫—Ç–æ-—Ç–æ –Ω–µ–ø—Ä–∞–≤","desc":"–°–≥–ª–∞–∑ –∏ —Ö–µ–π—Ç; —Ç—ã –±—É–¥–µ—à—å –≤–≤—è–∑—ã–≤–∞—Ç—å—Å—è –≤ –ª—é–±–æ–π —Å–ø–æ—Ä –≤ –∏–Ω—Ç–µ—Ä–Ω–µ—Ç–µ –∏ –≤–µ–∑–¥–µ –ø—Ä–æ–∏–≥—Ä–∞–µ—à—å"},
    {"emoji":"‚è∞","code":"deadline","name":"–î–µ–¥–ª–∞–π–Ω—ã –≥–æ—Ä—è—Ç","desc":"—Ç–≤–æ—è –±—ã–≤—à–∞—è/–±—ã–≤—à–∏–π –ø–æ–∑–≤–æ–Ω–∏—Ç —Ç–µ–±–µ —á–µ—Ä–µ–∑ –ø–∞—Ä—É –º–∏–Ω—É—Ç"},
    {"emoji":"üóØÔ∏è","code":"arguments","name":"–°–∫–∞–Ω–¥–∞–ª –Ω–∞ –ø—É—Å—Ç–æ–º –º–µ—Å—Ç–µ","desc":"–¢—ã –ø–æ—Å—Å–æ—Ä–∏—à—å—Å—è —Å –ª—é–±–∏–º—ã–º–∏ —Å–µ–∫—Ç–∞–Ω—Ç–∞–º–∏ –∏–∑-–∑–∏ –Ω—é–∞–Ω—Å–æ–≤ –∂–µ—Ä—Ç–≤–æ–ø—Ä–∏–Ω–æ—à–µ–Ω–∏—è, –æ–Ω–∏ –ø–µ—Ä–µ—Å—Ç–∞–Ω—É—Ç —Å —Ç–æ–±–æ–π –æ–±—â–∞—Ç—å—Å—è"},
    {"emoji":"üôà","code":"embarr","name":"–ü—É–±–ª–∏—á–Ω—ã–π –∫–æ–Ω—Ñ—É–∑","desc":"–¢–µ–±—è –ø—Ä–∏–≥–ª–∞—Å—è—Ç –ø—Ä–æ–≤–µ—Å—Ç–∏ –º–∞—Å—Ç–µ—Ä –∫–ª–∞—Å—Å –¥–ª—è –ø–µ–Ω—Å–∏–æ–Ω–µ—Ä–æ–≤, —Ç—ã –µ–≥–æ —Å–æ–ª—å–µ—à—å –∏ –±—É–¥–µ—à—å –æ—Å–≤–∏—Å—Ç–∞–Ω"},
    {"emoji":"üóÉÔ∏è","code":"bureau","name":"–ë—é—Ä–æ–∫—Ä–∞—Ç–∏—á–µ—Å–∫–∏–π –∫–≤–µ—Å—Ç","desc":"–°–æ–±–∏—Ä–∞–π –≤–µ—â–∏, —Ç—ã —É–µ–∑–∂–∞–µ—à—å –≤ –ì–µ—Ä–º–∞–Ω–∏—é"},
    {"emoji":"üöß","code":"transport","name":"–î–æ—Ä–æ–≥–∏ –≥–Ω–µ–≤–∞","desc":"–¢—ã –æ—Ç–ø—Ä–∞–≤–ª—è–µ—à—å—Å—è –≤ –ø—É—Ç–µ—à–µ—Å—Ç–≤–∏–µ —á–µ—Ä–µ–∑ –≤—Å—é –†–æ—Å—Å–∏—é –Ω–∞ –õ–∞–¥–µ –ö–∞–ª–∏–Ω–∞"},
    {"emoji":"ü©π","code":"bruise","name":"–õ—ë–≥–∫–∏–µ —Ç—Ä–∞–≤–º—ã","desc":"–¢—ã –æ—Å–æ–∑–Ω–∞–µ—à—å, —á—Ç–æ –Ω–∏—á–µ–≥–æ –Ω–µ –¥–æ–±–∏–ª—Å—è –≤ —ç—Ç–æ–π –∂–∏–∑–Ω–∏ –∏ –ø—Ä–æ–¥–æ–ª–∂–∏—à—å –ª–∏—Å—Ç–∞—Ç—å –º–µ–º–∞—Å—ã"},
    {"emoji":"üßØ","code":"appliance","name":"–ë—ã—Ç–æ–≤–æ–π –±—É–Ω—Ç","desc":"–¢–∞—Ä–∞–∫–∞–Ω—ã –æ—Ä–≥–∞–Ω–∏–∑—É—é—Ç –ø—Ä–æ—Ñ—Å–æ—é–∑, –∑–∞—Ö–≤–∞—Ç—è—Ç —Ö–æ–ª–æ–¥–∏–ª—å–Ω–∏–∫ –∏ —Å—Ç–∞–Ω—É—Ç —Ç—Ä–µ–±–æ–≤–∞—Ç—å –∫–æ–º–º—É–Ω–∏—Å—Ç–∏—á–µ—Å–∫–æ–π —É—Ç–æ–ø–∏–∏ "},
    {"emoji":"üßíüê∂","code":"kids_pets","name":"–î–æ–º–∞—à–Ω–∏–µ –ø—Ä–æ–¥–µ–ª–∫–∏","desc":"–í—Å–µ —Å—Ç–µ–Ω—ã –±—É–¥—É—Ç –∏—Å–ø–∏—Å–∞–Ω—ã, –∏–Ω–æ–≥–¥–∞ –¥–∞–∂–µ —Ä–µ–±–µ–Ω–∫–æ–º"},
    {"emoji":"üëª","code":"ghost","name":"–ù–æ—á–Ω—ã–µ –≥–æ—Å—Ç–∏","desc":"–¢–≤–æ–π –ø–æ–∫–æ–π–Ω—ã–π –ø—Ä–∞–¥–µ–¥ –≤—Å—é –Ω–æ—á—å –±—É–¥–µ—Ç –ø–æ–Ω–æ—Å–∏—Ç—å —Ç–µ–±—è –∑–∞ –Ω–µ–¥–æ—Å—Ç–∞–æ—á–Ω—É—é —Å—ã–Ω–æ–≤—å—é –ø–æ—á—Ç–∏—Ç–µ–ª—å–Ω–æ—Å—Ç—å"},
    {"emoji":"ü™¶","code":"grim","name":"–ú—Ä–∞—á–Ω—ã–π –∑–Ω–∞–∫","desc":"–î–æ–ª–ª–∞—Ä –ø–æ —Å–æ—Ç–∫–µ"},
]

# –ü—Å–µ–≤–¥–æ-¬´–±–∞—Ü–∑—ã¬ª
EPOCH = datetime(1970,1,1,0,0,0)

def _idx60(dt: datetime) -> int:      return ((dt - EPOCH).days) % 60
def _stem(dt: datetime) -> int:        return _idx60(dt) % 10
def _branch(dt: datetime) -> int:      return _idx60(dt) % 12
def _hour_branch(dt: datetime) -> int: return ((dt.hour + 1) // 2) % 12  # 23‚Äì00 -> Â≠ê

# –ò–∫–æ–Ω–∫–∏ –≤–µ—Ç–≤–µ–π
ICON_DIR = "icons"
def icon_filename(py: str) -> str: return os.path.join(ICON_DIR, f"{py}.png")

def ensure_icons():
    """–°–æ–∑–¥–∞—ë—Ç 12 PNG (512√ó512) —Å —ç–º–æ–¥–∑–∏-–∂–∏–≤–æ—Ç–Ω—ã–º –∏ –ø–æ–¥–ø–∏—Å—å—é PY/—Ä—É—Å. –¢—Ä–µ–±—É–µ—Ç Pillow."""
    try:
        from PIL import Image, ImageDraw, ImageFont
    except Exception:
        return
    os.makedirs(ICON_DIR, exist_ok=True)
    try:
        font_big = ImageFont.truetype("arial.ttf", 180)
        font_small = ImageFont.truetype("arial.ttf", 48)
    except Exception:
        from PIL import ImageFont as F
        font_big = F.load_default()
        font_small = F.load_default()
    for han, py, ru in BRANCHES:
        p = icon_filename(py)
        if os.path.exists(p): continue
        img = Image.new("RGB", (512, 512), (24, 24, 24))
        d = ImageDraw.Draw(img)
        animal = ANIMALS.get(py, "‚ùì")
        d.text((256, 150), animal, anchor="mm", font=font_big, fill=(240,240,240))
        d.text((256, 380), f"{py.upper()} / {ru}", anchor="mm", font=font_small, fill=(200,200,200))
        img.save(p, "PNG")

# –ú–æ–¥–µ–ª—å
@dataclass
class HowlReading:
    dt: datetime
    stem: int
    branch: int
    hour_branch: int
    element: str
    yin_yang: str
    branch_tuple: Tuple[str,str,str]
    hour_branch_tuple: Tuple[str,str,str]
    doom_index: int
    doom_level: int
    doom: Dict[str,str]
    taboo: str  # << –≤–º–µ—Å—Ç–æ ¬´–Ω–∞–ø—Ä–∞–≤–ª–µ–Ω–∏—è¬ª

def read_howl(dt: datetime, salt: int = 0) -> HowlReading:
    s  = _stem(dt)
    b  = _branch(dt)
    hb = _hour_branch(dt)
    element = ELEMENTS[s // 2]
    yin_yang = YIN_YANG[s % 2]
    branch_tuple      = BRANCHES[b]
    hour_branch_tuple = BRANCHES[hb]
    doom_index = (s*12 + b*3 + hb + salt) % len(MISFORTUNES)
    doom_level = ((s + hb + b) % 5) + 1  # 1..5
    taboo = BRANCH_TABOOS[b]
    doom = MISFORTUNES[doom_index]
    return HowlReading(dt, s, b, hb, element, yin_yang, branch_tuple, hour_branch_tuple,
                       doom_index, doom_level, doom, taboo)

def render_reading(r: HowlReading) -> str:
    han, py, ru     = r.branch_tuple
    hhan, hpy, hru  = r.hour_branch_tuple
    stars = "‚ò†Ô∏è" * r.doom_level
    base = (
        f"{r.doom['emoji']} {stars}\n"
        f"{r.dt.isoformat(sep=' ', timespec='minutes')}  [{han} {py} / {ru}; —á–∞—Å {hhan} {hpy}]\n"
        f"{r.doom['name']} ‚Äî {r.doom['desc']}\n"
        f"–≠–ª–µ–º–µ–Ω—Ç –¥–Ω—è: {r.element} ({r.yin_yang}); —Ç–∞–±—É –µ–¥—ã: {r.taboo}."
    )
    # –°–æ–≤–µ—Ç—ã (TCM/–¥–∞–æ—Å—Å–∫–∏–µ –ø—Ä–∞–∫—Ç–∏–∫–∏) ‚Äî —Ä–µ–¥–∞–∫—Ç–∏—Ä—É–π –ø—Ä–∏ –∂–µ–ª–∞–Ω–∏–∏
    tips = [
        "–î—ã—Ö–∞–Ω–∏–µ –∂–∏–≤–æ—Ç–æ–º (–Ω–∏–∂–Ω–∏–π –¥–∞–Ω—å—Ç—è–Ω—å) 5 –º–∏–Ω—É—Ç: –≤—ã–¥–æ—Ö –¥–ª–∏–Ω–Ω–µ–µ –≤–¥–æ—Ö–∞.",
        "–®–µ—Å—Ç—å —Ü–µ–ª–∏—Ç–µ–ª—å–Ω—ã—Ö –∑–≤—É–∫–æ–≤: xu/–ø–µ—á–µ–Ω—å, he/—Å–µ—Ä–¥—Ü–µ, hu/—Å–µ–ª–µ–∑—ë–Ω–∫–∞, si/–ª—ë–≥–∫–∏–µ, chui/–ø–æ—á–∫–∏, xi/—Ç—Ä–æ–π–Ω–æ–π –æ–±–æ–≥—Ä–µ–≤–∞—Ç–µ–ª—å.",
        "–†–∞—Å—Ç–∏—Ä–∞–Ω–∏–µ –ª–∞–¥–æ–Ω–µ–π –¥–æ —Ç–µ–ø–ª–∞ –∏ –ø—Ä–∏–∫–ª–∞–¥—ã–≤–∞–Ω–∏–µ –∫ –≥–ª–∞–∑–∞–º 30‚Äì60 —Å–µ–∫.",
        "–ú—è–≥–∫–æ–µ –ø–æ—Å—Ç—É–∫–∏–≤–∞–Ω–∏–µ –≥—Ä—É–¥–Ω–æ–π –∫–ª–µ—Ç–∫–∏ 36 —Ä–∞–∑ –ª–∞–¥–æ–Ω—è–º–∏.",
        "–ü—Ä–æ–∫–∞—Ç–∫–∞ —Å—Ç–æ–ø—ã –º—è—á–æ–º 1‚Äì2 –º–∏–Ω—É—Ç—ã –Ω–∞ –∫–∞–∂–¥—É—é.",
        "–°–æ–≥—Ä–µ–≤ –Ω–∏–∂–Ω–µ–≥–æ –¥–∞–Ω—å—Ç—è–Ω—å —Ç—ë–ø–ª–æ–π –≥—Ä–µ–ª–∫–æ–π 10 –º–∏–Ω—É—Ç (–Ω–µ –≥–æ—Ä—è—á–æ).",
        "–ò–º–±–∏—Ä–Ω—ã–π —á–∞–π —Å –∫—Ä–∞—Å–Ω—ã–º —Ñ–∏–Ω–∏–∫–æ–º –∏ —è–≥–æ–¥–∞–º–∏ –≥–æ–¥–∂–∏ –ø–æ –≤–∫—É—Å—É.",
        "–¢—ë–ø–ª–∞—è –Ω–æ–∂–Ω–∞—è –≤–∞–Ω–Ω–∞ —Å —â–µ–ø–æ—Ç–∫–æ–π —Å–æ–ª–∏ 10‚Äì15 –º–∏–Ω—É—Ç –ø–µ—Ä–µ–¥ —Å–Ω–æ–º.",
        "HeGu (LI4) –∏ ZuSanLi (ST36) ‚Äî —Å–∞–º–æ–º–∞—Å—Å–∞–∂ –ø–æ 1‚Äì2 –º–∏–Ω –Ω–∞ —Å—Ç–æ—Ä–æ–Ω—É.",
        "NeiGuan (PC6) 1‚Äì2 –º–∏–Ω –ø—Ä–∏ —Ç—Ä–µ–≤–æ–≥–µ/—Ç–æ—à–Ω–æ—Ç–µ; –º—è–≥–∫–∏–µ –∫—Ä—É–≥–∏.",
        "–†–∞–∑–æ–≥—Ä–µ–≤ FengChi (GB20) —É –æ—Å–Ω–æ–≤–∞–Ω–∏—è —á–µ—Ä–µ–ø–∞ –º—è–≥–∫–∏–º–∏ –∫—Ä—É–≥–∞–º–∏.",
        "–ü–ª–∞–≤–Ω—ã–µ –∫—Ä—É–≥–∏ –ø–ª–µ—á–∞–º–∏ –∏ —à–µ–∏ –ø–æ 6 —Ä–∞–∑ –≤ –∫–∞–∂–¥—É—é —Å—Ç–æ—Ä–æ–Ω—É.",
        "–õ—ë–≥–∫–∞—è –≤—Å—Ç—Ä—è—Å–∫–∞ —Ç–µ–ª–∞ 1‚Äì2 –º–∏–Ω—É—Ç—ã –¥–ª—è —Å–Ω—è—Ç–∏—è –∑–∞—Å—Ç–æ—è.",
        "5‚Äì10 –º–∏–Ω—É—Ç Baduanjin/—Ä–∞—Å—Ç—è–∂–∫–∏ ‚Äî –≤—ã–±–µ—Ä–∏ 3‚Äì4 –¥–≤–∏–∂–µ–Ω–∏—è.",
        "–ü—Ä–æ–≤–µ—Ç—Ä–∏–≤–∞–Ω–∏–µ 3 –º–∏–Ω—É—Ç—ã; –ø–æ –∂–µ–ª–∞–Ω–∏—é –ª—ë–≥–∫–æ–µ –±–ª–∞–≥–æ–≤–æ–Ω–∏–µ.",
        "–ú–µ–Ω—å—à–µ —Ö–æ–ª–æ–¥–Ω–æ–≥–æ –≤ —Ö–æ–ª–æ–¥–Ω—ã–π –¥–µ–Ω—å; –≤—ã–±–∏—Ä–∞–π —Ç—ë–ø–ª—É—é –ø–∏—â—É.",
        "–¢—ë–ø–ª–∞—è –≤–æ–¥–∞ –Ω–µ–±–æ–ª—å—à–∏–º–∏ –≥–ª–æ—Ç–∫–∞–º–∏ –≤ —Ç–µ—á–µ–Ω–∏–µ –¥–Ω—è.",
        "–†–∞—Å—Ç–∏—Ä–∞–Ω–∏–µ –ø–æ—è—Å–Ω–∏—Ü—ã (–æ–±–ª–∞—Å—Ç—å –ø–æ—á–µ–∫) 1‚Äì2 –º–∏–Ω—É—Ç—ã –¥–æ —Ç–µ–ø–ª–∞.",
        "–ü–∞—É–∑–∞ –±–µ–∑ —ç–∫—Ä–∞–Ω–∞ 5 –º–∏–Ω—É—Ç: –≤–∑–≥–ª—è–¥ –≤–¥–∞–ª—å, —Ä–∞—Å—Å–ª–∞–±—å –ø–ª–µ—á–∏.",
        "–°–∞–º–æ–º–∞—Å—Å–∞–∂ –∂–∏–≤–æ—Ç–∞ –ø–æ —á–∞—Å–æ–≤–æ–π —Å—Ç—Ä–µ–ª–∫–µ 1‚Äì2 –º–∏–Ω—É—Ç—ã.",
    ]
    tip = tips[(r.stem + r.branch + r.hour_branch) % len(tips)]
    return base + "\n" + "–°–æ–≤–µ—Ç –¥—É—Ö–æ–≤: " + tip

# .ics –∫–∞–ª–µ–Ω–¥–∞—Ä—å –Ω–∞ –≥–æ–¥ (–æ–¥–∏–Ω ¬´–ø—Ä–∏–≥–æ–≤–æ—Ä¬ª –≤ –¥–µ–Ω—å)
def ics_for_year(year: int) -> str:
    lines = ["BEGIN:VCALENDAR","VERSION:2.0","PRODID:-//Ghost Cry Oracle//ru"]
    cur = datetime(year, 1, 1)
    while cur.year == year:
        r = read_howl(cur)
        uid  = f"{cur.strftime('%Y%m%d')}-{r.doom['code']}@ghost-cry"
        title = r.doom["name"]
        desc  = f"{r.doom['emoji']} {r.doom['name']} ‚Äî {r.doom['desc']} / –¢–∞–±—É: {BRANCH_TABOOS[r.branch]}"
        desc  = desc.replace(",", r"\,").replace(";", r"\;").replace("\n", r"\n")
        lines += [
            "BEGIN:VEVENT",
            f"UID:{uid}",
            f"DTSTAMP:{cur.strftime('%Y%m%d')}T000000Z",
            f"DTSTART;VALUE=DATE:{cur.strftime('%Y%m%d')}",
            f"SUMMARY:{title}",
            f"DESCRIPTION:{desc}",
            "END:VEVENT",
        ]
        cur += timedelta(days=1)
    lines.append("END:VCALENDAR")
    return "\n".join(lines)
